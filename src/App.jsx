import "./App.css";
import { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import { useAuth } from "./contexts/AuthContext";
import AuthForm from "./components/LoginForm";
import ChatBot from "./components/ChatBot";

function App() {
  const [language, setLanguage] = useState(() => {
    return localStorage.getItem("language") || "bg";
  });
  const [showAuthForm, setShowAuthForm] = useState(false);
  const [showUserPopup, setShowUserPopup] = useState(false);
  const [showChat, setShowChat] = useState(false);
  const { user, logout, isAuthenticated } = useAuth();

  const handleLanguageChange = (newLanguage) => {
    setLanguage(newLanguage);
    localStorage.setItem("language", newLanguage);
  };

  const translations = {
    en: {
      brand: "3D Faces",
      home: "Home",
      about: "About",
      portfolio: "Portfolio",
      contact: "Contact",
      heroTitle: "Professional 3D Face Modeling",
      heroDesc:
        "Creating stunning, realistic 3D faces with cutting-edge technology",
      viewPortfolio: "View Portfolio",
      masterTitle: "Master of 3D Artistry",
      masterDesc:
        "With years of experience in 3D modeling and digital art, I specialize in creating photorealistic human faces that capture emotion, personality, and detail.",
      featuredWork: "Featured Work",
      characterPortrait: "Character Portrait",
      realisticHuman: "Realistic Human",
      fantasyCharacter: "Fantasy Character",
      digitalAvatar: "Digital Avatar",
      createTogether: "Let's Create Together",
      contactDesc:
        "Ready to bring your vision to life? Get in touch and let's discuss your project.",
      availableFreelance: "Available for freelance",
      yourName: "Your Name",
      yourEmail: "Your Email",
      tellProject: "Tell me about your project",
      sendMessage: "Send Message",
      login: "Login",
      logout: "Logout",
      welcome: "Welcome",
      signup: "Sign Up",
      username: "Username",
      email: "Email",
      password: "Password",
      confirmPassword: "Confirm Password",
      cancel: "Cancel",
      loginFailed: "Login failed. Please check your credentials.",
      signupFailed: "Signup failed. Please try again.",
      passwordsDontMatch: "Passwords don't match.",
      loggingIn: "Logging in...",
      signingUp: "Signing up...",
      noAccount: "Don't have an account?",
      haveAccount: "Already have an account?",
      chatTitle: "AI Assistant",
      chatWelcome: "Hello! I'm your AI assistant. How can I help you today?",
      chatPlaceholder: "Type your message...",
      chatError: "Sorry, I encountered an error. Please try again.",
      send: "Send",
    },
    bg: {
      brand: "3D –õ–∏—Ü–∞",
      home: "–ù–∞—á–∞–ª–æ",
      about: "–ó–∞ –º–µ–Ω",
      portfolio: "–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ",
      contact: "–ö–æ–Ω—Ç–∞–∫—Ç–∏",
      heroTitle: "–ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–Ω–æ 3D –º–æ–¥–µ–ª–∏—Ä–∞–Ω–µ –Ω–∞ –ª–∏—Ü–∞",
      heroDesc:
        "–°—ä–∑–¥–∞–≤–∞–º –∑–∞—à–µ–º–µ—Ç—è–≤–∞—â–∏, —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∏ 3D –ª–∏—Ü–∞ —Å –Ω–∞–π-—Å—ä–≤—Ä–µ–º–µ–Ω–Ω–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
      viewPortfolio: "–í–∏–∂ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ",
      masterTitle: "–ú–∞–π—Å—Ç–æ—Ä –Ω–∞ 3D –∏–∑–∫—É—Å—Ç–≤–æ—Ç–æ",
      masterDesc:
        "–° –≥–æ–¥–∏–Ω–∏ –æ–ø–∏—Ç –≤ 3D –º–æ–¥–µ–ª–∏—Ä–∞–Ω–µ—Ç–æ –∏ —Ü–∏—Ñ—Ä–æ–≤–æ—Ç–æ –∏–∑–∫—É—Å—Ç–≤–æ, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–º –≤ —Å—ä–∑–¥–∞–≤–∞–Ω–µ—Ç–æ –Ω–∞ —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∏ —á–æ–≤–µ—à–∫–∏ –ª–∏—Ü–∞, –∫–æ–∏—Ç–æ —É–ª–∞–≤—è—Ç –µ–º–æ—Ü–∏–∏, –ª–∏—á–Ω–æ—Å—Ç –∏ –¥–µ—Ç–∞–π–ª–∏.",
      featuredWork: "–ò–∑–±—Ä–∞–Ω–∏ —Ä–∞–±–æ—Ç–∏",
      characterPortrait: "–ü–æ—Ä—Ç—Ä–µ—Ç –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂",
      realisticHuman: "–†–µ–∞–ª–∏—Å—Ç–∏—á–µ–Ω —á–æ–≤–µ–∫",
      fantasyCharacter: "–§–µ–Ω—Ç—ä–∑–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂",
      digitalAvatar: "–¶–∏—Ñ—Ä–æ–≤ –∞–≤–∞—Ç–∞—Ä",
      createTogether: "–ù–µ–∫–∞ —Ç–≤–æ—Ä–∏–º –∑–∞–µ–¥–Ω–æ",
      contactDesc:
        "–ì–æ—Ç–æ–≤–∏ –ª–∏ —Å—Ç–µ –¥–∞ –æ–∂–∏–≤–µ–µ—Ç–µ –≤–∞—à–∞—Ç–∞ –≤–∏–∑–∏—è? –°–≤—ä—Ä–∂–µ—Ç–µ —Å–µ —Å –º–µ–Ω –∏ –Ω–µ–∫–∞ –æ–±—Å—ä–¥–∏–º –≤–∞—à–∏—è –ø—Ä–æ–µ–∫—Ç.",
      availableFreelance: "–î–æ—Å—Ç—ä–ø–µ–Ω –∑–∞ —Ñ—Ä–∏–π–ª–∞–Ω—Å –ø—Ä–æ–µ–∫—Ç–∏",
      yourName: "–í–∞—à–µ—Ç–æ –∏–º–µ",
      yourEmail: "–í–∞—à–∏—è –∏–º–µ–π–ª",
      tellProject: "–†–∞–∑–∫–∞–∂–µ—Ç–µ –º–∏ –∑–∞ –≤–∞—à–∏—è –ø—Ä–æ–µ–∫—Ç",
      sendMessage: "–ò–∑–ø—Ä–∞—Ç–∏ —Å—ä–æ–±—â–µ–Ω–∏–µ",
      login: "–í—Ö–æ–¥",
      logout: "–ò–∑—Ö–æ–¥",
      welcome: "–î–æ–±—Ä–µ –¥–æ—à–ª–∏",
      signup: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
      username: "–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ",
      email: "–ò–º–µ–π–ª",
      password: "–ü–∞—Ä–æ–ª–∞",
      confirmPassword: "–ü–æ—Ç–≤—ä—Ä–¥–∏ –ø–∞—Ä–æ–ª–∞",
      cancel: "–û—Ç–∫–∞–∑",
      loginFailed: "–ù–µ—É—Å–ø–µ—à–µ–Ω –≤—Ö–æ–¥. –ú–æ–ª—è, –ø—Ä–æ–≤–µ—Ä–µ—Ç–µ –¥–∞–Ω–Ω–∏—Ç–µ —Å–∏.",
      signupFailed: "–ù–µ—É—Å–ø–µ—à–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è. –ú–æ–ª—è, –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.",
      passwordsDontMatch: "–ü–∞—Ä–æ–ª–∏—Ç–µ –Ω–µ —Å—ä–≤–ø–∞–¥–∞—Ç.",
      loggingIn: "–í–ª–∏–∑–∞–Ω–µ...",
      signingUp: "–†–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞–Ω–µ...",
      noAccount: "–ù—è–º–∞—Ç–µ –∞–∫–∞—É–Ω—Ç?",
      haveAccount: "–í–µ—á–µ –∏–º–∞—Ç–µ –∞–∫–∞—É–Ω—Ç?",
      chatTitle: "AI –ê—Å–∏—Å—Ç–µ–Ω—Ç",
      chatWelcome:
        "–ó–¥—Ä–∞–≤–µ–π—Ç–µ! –ê–∑ —Å—ä–º –≤–∞—à–∏—è—Ç AI –∞—Å–∏—Å—Ç–µ–Ω—Ç. –ö–∞–∫ –º–æ–≥–∞ –¥–∞ –≤–∏ –ø–æ–º–æ–≥–Ω–∞ –¥–Ω–µ—Å?",
      chatPlaceholder: "–ù–∞–ø–∏—à–µ—Ç–µ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ —Å–∏...",
      chatError: "–°—ä–∂–∞–ª—è–≤–∞–º, –≤—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞. –ú–æ–ª—è, –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.",
      send: "–ò–∑–ø—Ä–∞—Ç–∏",
    },
  };

  const t = translations[language];
  return (
    <div className="App">
      <nav className="navbar">
        <div className="nav-container">
          <div className="nav-brand">
            <span className="brand-icon">‚ö°</span>
            <span className="brand-text">{t.brand}</span>
          </div>

          <div className="nav-center">
            <div className="nav-links">
              <a href="#hero" className="nav-link">
                {t.home}
              </a>
              <a href="#about" className="nav-link">
                {t.about}
              </a>
              <a href="#portfolio" className="nav-link">
                {t.portfolio}
              </a>
              <Link to="/face-to-model" className="nav-link">
                {language === "bg" ? "3D –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä" : "3D Generator"}
              </Link>
              <a href="#contact" className="nav-link">
                {t.contact}
              </a>
            </div>
          </div>

          <div className="nav-right">
            <button
              className="lang-toggle"
              onClick={() =>
                handleLanguageChange(language === "en" ? "bg" : "en")
              }
            >
              {language === "en" ? "BG" : "EN"}
            </button>

            {isAuthenticated ? (
              <div className="user-profile">
                <div
                  className="user-display"
                  onClick={() => setShowUserPopup(!showUserPopup)}
                >
                  <div className="user-avatar">
                    <span>{user?.username?.[0]?.toUpperCase() || "U"}</span>
                  </div>
                  <span className="user-name">{user?.username || "User"}</span>
                </div>

                {showUserPopup && (
                  <div className="user-popup">
                    <div className="user-popup-content">
                      <div className="user-info-section">
                        <div className="user-avatar-large">
                          <span>
                            {user?.username?.[0]?.toUpperCase() || "U"}
                          </span>
                        </div>
                        <div className="user-details">
                          <h3>{user?.username || "User"}</h3>
                          <p>{user?.email || "user@example.com"}</p>
                          <span className="user-status">Online</span>
                        </div>
                      </div>
                      <button
                        className="logout-button-popup"
                        onClick={() => {
                          logout();
                          setShowUserPopup(false);
                        }}
                      >
                        <span className="logout-icon">üö™</span>
                        {t.logout}
                      </button>
                    </div>
                  </div>
                )}
              </div>
            ) : (
              <button
                className="login-btn"
                onClick={() => setShowAuthForm(true)}
              >
                {t.login}
              </button>
            )}
          </div>
        </div>
      </nav>

      <section id="hero" className="hero-section">
        <div className="hero-container">
          <div className="hero-content">
            <h1 className="hero-title">{t.heroTitle}</h1>
            <p className="hero-description">{t.heroDesc}</p>

            <div className="hero-stats">
              <div className="stat-item">
                <span className="stat-number">50+</span>
                <span className="stat-label">
                  {language === "bg" ? "–ü—Ä–æ–µ–∫—Ç–∞" : "Projects"}
                </span>
              </div>
              <div className="stat-item">
                <span className="stat-number">100%</span>
                <span className="stat-label">
                  {language === "bg" ? "–ö–∞—á–µ—Å—Ç–≤–æ" : "Quality"}
                </span>
              </div>
              <div className="stat-item">
                <span className="stat-number">24/7</span>
                <span className="stat-label">
                  {language === "bg" ? "–ü–æ–¥–¥—Ä—ä–∂–∫–∞" : "Support"}
                </span>
              </div>
            </div>

            <div className="hero-actions">
              <Link to="/gallery" className="primary-btn">
                <span>{t.viewPortfolio}</span>
                <span className="btn-arrow">‚Üí</span>
              </Link>
              <button
                className="secondary-btn"
                onClick={() => setShowAuthForm(true)}
              >
                <span className="btn-icon">üí¨</span>
                {language === "bg" ? "–ó–∞–ø–æ—á–Ω–∏ –ø—Ä–æ–µ–∫—Ç" : "Start Project"}
              </button>
            </div>

            <div className="hero-features">
              <div className="feature-item">
                <div className="feature-icon">‚ö°</div>
                <div className="feature-text">
                  <h4>
                    {language === "bg" ? "–ë—ä—Ä–∑–∞ –¥–æ—Å—Ç–∞–≤–∫–∞" : "Fast Delivery"}
                  </h4>
                  <p>{language === "bg" ? "–î–æ 7 –¥–Ω–∏" : "Within 7 days"}</p>
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-icon">üéØ</div>
                <div className="feature-text">
                  <h4>
                    {language === "bg"
                      ? "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª–µ–Ω –ø–æ–¥—Ö–æ–¥"
                      : "Custom Approach"}
                  </h4>
                  <p>
                    {language === "bg"
                      ? "–°–ø–æ—Ä–µ–¥ –Ω—É–∂–¥–∏—Ç–µ –≤–∏"
                      : "Tailored to you"}
                  </p>
                </div>
              </div>
            </div>
          </div>

          <div className="hero-visual">
            <div className="visual-container">
              <div className="main-showcase">
                <img
                  src="/homeIng1.png"
                  alt="3D Face"
                  className="showcase-image"
                />
                <div className="showcase-glow"></div>
              </div>

              <div className="floating-cards">
                <div className="floating-card card-1">
                  <div className="card-icon">üé®</div>
                  <div className="card-text">3D Modeling</div>
                </div>
                <div className="floating-card card-2">
                  <div className="card-icon">‚ú®</div>
                  <div className="card-text">Rendering</div>
                </div>
                <div className="floating-card card-3">
                  <div className="card-icon">üé¨</div>
                  <div className="card-text">Animation</div>
                </div>
              </div>

              <div className="geometric-elements">
                <div className="geo-element geo-1"></div>
                <div className="geo-element geo-2"></div>
                <div className="geo-element geo-3"></div>
                <div className="geo-element geo-4"></div>
              </div>
            </div>
          </div>
        </div>
      </section>

      <section id="about" className="about-section">
        <div className="about-container">
          <div className="about-text">
            <h2>{t.masterTitle}</h2>
            <p>{t.masterDesc}</p>
            <div className="skills">
              <span>Blender</span>
              <span>ZBrush</span>
              <span>Maya</span>
              <span>Substance Painter</span>
            </div>
          </div>
          <div className="about-image">
            <img src="/section2.png" alt="3D Art" className="section-image" />
          </div>
        </div>
      </section>

      <section id="portfolio" className="portfolio-section">
        <h2>{t.featuredWork}</h2>
        <div className="portfolio-grid">
          <div className="portfolio-item">
            <img
              src="/homeIng1.png"
              alt="Portfolio Item"
              className="portfolio-image-content"
            />
            <h3>{t.characterPortrait}</h3>
          </div>
          <div className="portfolio-item">
            <img
              src="/homeIng1.png"
              alt="Portfolio Item"
              className="portfolio-image-content"
            />
            <h3>{t.realisticHuman}</h3>
          </div>
          <div className="portfolio-item">
            <img
              src="/homeIng1.png"
              alt="Portfolio Item"
              className="portfolio-image-content"
            />
            <h3>{t.fantasyCharacter}</h3>
          </div>
        </div>
        <div style={{ textAlign: "center", marginTop: "2rem" }}>
          <Link to="/gallery" className="cta-button">
            {language === "bg" ? "–ì–∞–ª–µ—Ä–∏—è" : "Gallery"}
          </Link>
        </div>
      </section>

      <section id="contact" className="contact-section">
        <div className="contact-container">
          <div className="contact-info">
            <h2>{t.createTogether}</h2>
            <p>{t.contactDesc}</p>
            <div className="contact-details">
              <div className="contact-item">
                <span>üìß</span>
                <span>hello@3dfaces.com</span>
              </div>
              <div className="contact-item">
                <span>üíº</span>
                <span>{t.availableFreelance}</span>
              </div>
            </div>
          </div>
          <div className="contact-form">
            <form>
              <input type="text" placeholder={t.yourName} />
              <input type="email" placeholder={t.yourEmail} />
              <textarea placeholder={t.tellProject}></textarea>
              <button type="submit">{t.sendMessage}</button>
            </form>
          </div>
        </div>
      </section>

      {showAuthForm && (
        <AuthForm onClose={() => setShowAuthForm(false)} translations={t} />
      )}

      {isAuthenticated && (
        <>
          <button
            className="chat-fab"
            onClick={() => setShowChat(true)}
            title={t.chatTitle}
          >
            üí¨
          </button>

          <ChatBot
            isOpen={showChat}
            onClose={() => setShowChat(false)}
            translations={t}
            language={language}
          />
        </>
      )}
    </div>
  );
}

export default App;
