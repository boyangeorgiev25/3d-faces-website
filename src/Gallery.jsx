import "./Gallery.css";
import { useState } from "react";
import { Link } from "react-router-dom";
import { useAuth } from "./contexts/AuthContext";

function Gallery() {
  const [language, setLanguage] = useState(() => {
    return localStorage.getItem('language') || 'bg';
  });
  const [activeFilter, setActiveFilter] = useState('all');
  const [showUserPopup, setShowUserPopup] = useState(false);
  const { user, logout, isAuthenticated } = useAuth();

  const handleLanguageChange = (newLanguage) => {
    setLanguage(newLanguage);
    localStorage.setItem('language', newLanguage);
  };

  const translations = {
    en: {
      brand: "3D Faces",
      home: "Home",
      about: "About",
      portfolio: "Portfolio",
      contact: "Contact",
      galleryTitle: "Gallery",
      galleryDesc: "My 3D face modeling projects",
      categories: "Categories",
      all: "All",
      portraits: "Portraits",
      characters: "Characters",
      realistic: "Realistic",
      login: "Login",
      logout: "Logout",
      welcome: "Welcome"
    },
    bg: {
      brand: "3D –õ–∏—Ü–∞",
      home: "–ù–∞—á–∞–ª–æ",
      about: "–ó–∞ –º–µ–Ω",
      portfolio: "–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ",
      contact: "–ö–æ–Ω—Ç–∞–∫—Ç–∏",
      galleryTitle: "–ì–∞–ª–µ—Ä–∏—è",
      galleryDesc: "–ú–æ–∏—Ç–µ 3D –ø—Ä–æ–µ–∫—Ç–∏ –∑–∞ –ª–∏—Ü–∞",
      categories: "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏",
      all: "–í—Å–∏—á–∫–∏",
      portraits: "–ü–æ—Ä—Ç—Ä–µ—Ç–∏",
      characters: "–ü–µ—Ä—Å–æ–Ω–∞–∂–∏",
      realistic: "–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∏",
      login: "–í—Ö–æ–¥",
      logout: "–ò–∑—Ö–æ–¥",
      welcome: "–î–æ–±—Ä–µ –¥–æ—à–ª–∏"
    }
  };

  const t = translations[language];

  const projects = [
    { 
      id: 1, 
      category: 'portraits', 
      title: language === 'bg' ? '–ü–æ—Ä—Ç—Ä–µ—Ç–µ–Ω –º–æ–¥–µ–ª 1' : 'Portrait Model 1',
      description: language === 'bg' ? '–î–µ—Ç–∞–π–ª–µ–Ω –ø–æ—Ä—Ç—Ä–µ—Ç —Å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∏ —á–µ—Ä—Ç–∏' : 'Detailed portrait with realistic features'
    },
    { 
      id: 2, 
      category: 'characters', 
      title: language === 'bg' ? '–§–µ–Ω—Ç—ä–∑–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂' : 'Fantasy Character',
      description: language === 'bg' ? '–ú–∏—Å—Ç–∏—á–µ–Ω –ø–µ—Ä—Å–æ–Ω–∞–∂ –∑–∞ –∏–≥—Ä–∞' : 'Mystical game character design'
    },
    { 
      id: 3, 
      category: 'realistic', 
      title: language === 'bg' ? '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ –ª–∏—Ü–µ' : 'Realistic Face',
      description: language === 'bg' ? '–§–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ —á–æ–≤–µ—à–∫–æ –ª–∏—Ü–µ' : 'Photorealistic human face'
    },
    { 
      id: 4, 
      category: 'portraits', 
      title: language === 'bg' ? '–ü–æ—Ä—Ç—Ä–µ—Ç–µ–Ω –º–æ–¥–µ–ª 2' : 'Portrait Model 2',
      description: language === 'bg' ? '–ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–µ–Ω –ø–æ—Ä—Ç—Ä–µ—Ç' : 'Professional portrait study'
    },
    { 
      id: 5, 
      category: 'characters', 
      title: language === 'bg' ? '–ò–≥—Ä–æ–≤–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂' : 'Game Character',
      description: language === 'bg' ? '–í–æ–∏–Ω –∑–∞ –≤–∏–¥–µ–æ –∏–≥—Ä–∞' : 'Warrior for video game'
    },
    { 
      id: 6, 
      category: 'realistic', 
      title: language === 'bg' ? '–ß–æ–≤–µ—à–∫–∏ –º–æ–¥–µ–ª' : 'Human Model',
      description: language === 'bg' ? '–ê–Ω–∞—Ç–æ–º–∏—á–Ω–æ —Ç–æ—á–µ–Ω –º–æ–¥–µ–ª' : 'Anatomically accurate model'
    },
    { 
      id: 7, 
      category: 'characters', 
      title: language === 'bg' ? '–ù–∞—É—á–Ω–æ—Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–µ–Ω –ø–µ—Ä—Å–æ–Ω–∞–∂' : 'Sci-Fi Character',
      description: language === 'bg' ? '–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ–Ω –¥–∏–∑–∞–π–Ω' : 'Futuristic character design'
    },
    { 
      id: 8, 
      category: 'realistic', 
      title: language === 'bg' ? '–ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–µ–Ω –ø–æ—Ä—Ç—Ä–µ—Ç' : 'Professional Portrait',
      description: language === 'bg' ? '–ë–∏–∑–Ω–µ—Å –ø–æ—Ä—Ç—Ä–µ—Ç' : 'Business portrait model'
    },
  ];

  const filteredProjects = activeFilter === 'all' 
    ? projects 
    : projects.filter(project => project.category === activeFilter);

  return (
    <div className="Gallery">
      <nav className="navbar">
        <div className="nav-container">
          <div className="nav-brand">
            <span className="brand-icon">‚ö°</span>
            <span className="brand-text">{t.brand}</span>
          </div>
          
          <div className="nav-center">
            <div className="nav-links">
              <Link to="/" className="nav-link">{t.home}</Link>
              <Link to="/#about" className="nav-link">{t.about}</Link>
              <Link to="/#portfolio" className="nav-link">{t.portfolio}</Link>
              <Link to="/#contact" className="nav-link">{t.contact}</Link>
            </div>
          </div>

          <div className="nav-right">
            <button 
              className="lang-toggle" 
              onClick={() => handleLanguageChange(language === 'en' ? 'bg' : 'en')}
            >
              {language === 'en' ? 'BG' : 'EN'}
            </button>
            
            {isAuthenticated ? (
              <div className="user-profile">
                <div className="user-display" onClick={() => setShowUserPopup(!showUserPopup)}>
                  <div className="user-avatar">
                    <span>{user?.username?.[0]?.toUpperCase() || 'U'}</span>
                  </div>
                  <span className="user-name">{user?.username || 'User'}</span>
                </div>
                
                {showUserPopup && (
                  <div className="user-popup">
                    <div className="user-popup-content">
                      <div className="user-info-section">
                        <div className="user-avatar-large">
                          <span>{user?.username?.[0]?.toUpperCase() || 'U'}</span>
                        </div>
                        <div className="user-details">
                          <h3>{user?.username || 'User'}</h3>
                          <p>{user?.email || 'user@example.com'}</p>
                          <span className="user-status">Online</span>
                        </div>
                      </div>
                      <button className="logout-button-popup" onClick={() => {
                        logout();
                        setShowUserPopup(false);
                      }}>
                        <span className="logout-icon">üö™</span>
                        {t.logout}
                      </button>
                    </div>
                  </div>
                )}
              </div>
            ) : (
              <Link to="/" className="login-btn">
                <span className="login-icon">üë§</span>
                {t.login}
              </Link>
            )}
          </div>
        </div>
      </nav>

      <section className="gallery-hero">
        <div className="gallery-hero-content">
          <h1>{t.galleryTitle}</h1>
          <p>{t.galleryDesc}</p>
        </div>
      </section>

      <section className="gallery-content">
        <div className="gallery-filters">
          <div className="filter-buttons">
            <button 
              className={`filter-btn ${activeFilter === 'all' ? 'active' : ''}`}
              onClick={() => setActiveFilter('all')}
            >
              {t.all}
            </button>
            <button 
              className={`filter-btn ${activeFilter === 'portraits' ? 'active' : ''}`}
              onClick={() => setActiveFilter('portraits')}
            >
              {t.portraits}
            </button>
            <button 
              className={`filter-btn ${activeFilter === 'characters' ? 'active' : ''}`}
              onClick={() => setActiveFilter('characters')}
            >
              {t.characters}
            </button>
            <button 
              className={`filter-btn ${activeFilter === 'realistic' ? 'active' : ''}`}
              onClick={() => setActiveFilter('realistic')}
            >
              {t.realistic}
            </button>
          </div>
        </div>

        <div className="gallery-grid">
          {filteredProjects.map((project) => (
            <div key={project.id} className="gallery-item">
              <div className="category-sticker">
                {project.category === 'portraits' && (language === 'bg' ? '–ü–æ—Ä—Ç—Ä–µ—Ç–∏' : 'Portraits')}
                {project.category === 'characters' && (language === 'bg' ? '–ü–µ—Ä—Å–æ–Ω–∞–∂–∏' : 'Characters')}
                {project.category === 'realistic' && (language === 'bg' ? '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∏' : 'Realistic')}
              </div>
              <img src="/homeIng1.png" alt={project.title} />
              <div className="project-info">
                <h3>{project.title}</h3>
                <p className="project-description">{project.description}</p>
              </div>
            </div>
          ))}
        </div>
      </section>
    </div>
  );
}

export default Gallery;